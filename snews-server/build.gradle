buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.8'
        classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')

    }
}


plugins {
    id 'org.springframework.boot' version '2.0.0.BUILD-SNAPSHOT'
    id 'java'
}


apply plugin: 'com.google.protobuf'
apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'


group = 'life.kylestauffer'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/snapshot' }
    maven { url 'https://repo.spring.io/milestone' }
}

dependencies {

    implementation 'io.grpc:grpc-protobuf:1.21.0'
    implementation 'io.grpc:grpc-stub:1.21.0'
    implementation 'io.github.lognet:grpc-spring-boot-starter:3.4.1'

    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    implementation 'org.flywaydb:flyway-core'
    implementation 'mysql:mysql-connector-java'
    testImplementation 'com.h2database:h2'

    implementation 'org.slf4j:slf4j-api'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'net.coobird:thumbnailator:0.4.8'
    implementation 'com.auth0:java-jwt:3.4.0'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        exclude group: 'junit', module: 'junit'
    }
}


bootRun {
    systemProperties System.properties
}

////////////////////////////
// Proto
////////////////////////////

sourceSets.main.java.srcDirs = ['src/main/java', 'build/generated/source/proto']

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.7.1"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.21.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

////////////////////////////
// Docker
////////////////////////////
// $ docker tag life.kylestauffer/snews us.gcr.io/pbnm-82e14/snews
// $ docker push  us.gcr.io/pbnm-82e14/snews


apply plugin: 'com.palantir.docker'

task unpack(type: Copy) {
    dependsOn bootJar
    from(zipTree(tasks.bootJar.outputs.files.singleFile))
    into("build/dependency")
}
docker {
    name "${project.group}/${bootJar.baseName}"
    copySpec.from(tasks.unpack.outputs).into("dependency")
    buildArgs(['DEPENDENCY': "dependency"])
}

