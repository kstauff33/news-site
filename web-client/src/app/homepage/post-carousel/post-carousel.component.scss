@import '../../../styles.scss';
.carousel-caption {
    background-color: #8080806b;
    left: 25% !important;
    right: 25% !important;
    border-radius: $border-radius;
}

// steal bootstrap styles to make carousel work
::ng-deep {
    //////////////////////////////////
    // Variables
    //////////////////////////////////
    $white: #fff !default;
    $carousel-control-color: $white !default;
    $enable-transitions: true !default;
    $enable-prefers-reduced-motion-media-query: true !default;
    $enable-gradients: false !default;
    $carousel-control-color: $white !default;
    $carousel-control-width: 15% !default;
    $carousel-control-opacity: .5 !default;
    $carousel-control-hover-opacity: .9 !default;
    $carousel-control-transition: opacity .15s ease !default;
    $carousel-indicator-width: 30px !default;
    $carousel-indicator-height: 3px !default;
    $carousel-indicator-hit-area-height: 10px !default;
    $carousel-indicator-spacer: 3px !default;
    $carousel-indicator-active-bg: $white !default;
    $carousel-indicator-transition: opacity .6s ease !default;
    $carousel-caption-width: 70% !default;
    $carousel-caption-color: $white !default;
    $carousel-control-icon-width: 20px !default;
    $carousel-control-prev-icon-bg: str-replace(url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='#{$carousel-control-color}' viewBox='0 0 8 8'%3e%3cpath d='M5.25 0l-4 4 4 4 1.5-1.5-2.5-2.5 2.5-2.5-1.5-1.5z'/%3e%3c/svg%3e"),
    "#",
    "%23") !default;
    $carousel-control-next-icon-bg: str-replace(url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='#{$carousel-control-color}' viewBox='0 0 8 8'%3e%3cpath d='M2.75 0l-1.5 1.5 2.5 2.5-2.5 2.5 1.5 1.5 4-4-4-4z'/%3e%3c/svg%3e"),
    "#",
    "%23") !default;
    $carousel-transition-duration: .6s !default;
    $carousel-transition: transform $carousel-transition-duration ease-in-out !default; // Define transform transition first if using multiple transitions (e.g., `transform 2s ease, opacity .5s ease-out`)
    //////////////////////////////////
    // Mixins
    //////////////////////////////////
    @mixin clearfix() {
        &::after {
            display: block;
            clear: both;
            content: "";
        }
    }
    @mixin sr-only {
        position: absolute !important;
        width: 1px !important;
        height: 1px !important;
        padding: 0 !important;
        margin: -1px !important;
        overflow: hidden !important;
        clip: rect(0, 0, 0, 0) !important;
        white-space: nowrap !important;
        border: 0 !important;
    }
    @mixin transition($transition...) {
        @if $enable-transitions {
            @if length($transition)==0 {
                transition: $transition-base;
            }
            @else {
                transition: $transition;
            }
        }
        @if $enable-prefers-reduced-motion-media-query {
            @media (prefers-reduced-motion: reduce) {
                transition: none;
            }
        }
    } //////////////////////////////////
    .carousel {
        position: relative;
    }
    .carousel.pointer-event {
        touch-action: pan-y;
    }
    .carousel-inner {
        position: relative;
        width: 100%;
        overflow: hidden;
        @include clearfix();
    }
    .carousel-item {
        position: relative;
        display: none;
        float: left;
        width: 100%;
        margin-right: -100%;
        backface-visibility: hidden;
        @include transition($carousel-transition);
    }
    .carousel-item.active,
    .carousel-item-next,
    .carousel-item-prev {
        display: block;
    }
    .carousel-item-next:not(.carousel-item-left),
    .active.carousel-item-right {
        transform: translateX(100%);
    }
    .carousel-item-prev:not(.carousel-item-right),
    .active.carousel-item-left {
        transform: translateX(-100%);
    }
    .carousel-fade {
        .carousel-item {
            opacity: 0;
            transition-property: opacity;
            transform: none;
        }
        .carousel-item.active,
        .carousel-item-next.carousel-item-left,
        .carousel-item-prev.carousel-item-right {
            z-index: 1;
            opacity: 1;
        }
        .active.carousel-item-left,
        .active.carousel-item-right {
            z-index: 0;
            opacity: 0;
            @include transition(0s $carousel-transition-duration opacity);
        }
    }
    .carousel-control-prev,
    .carousel-control-next {
        position: absolute;
        top: 0;
        bottom: 0;
        z-index: 1; // Use flex for alignment (1-3)
        display: flex; // 1. allow flex styles
        align-items: center; // 2. vertically center contents
        justify-content: center; // 3. horizontally center contents
        width: $carousel-control-width;
        color: $carousel-control-color;
        text-align: center;
        opacity: $carousel-control-opacity;
        @include transition($carousel-control-transition); // Hover/focus state
        &:hover,
        &:focus {
            color: $carousel-control-color;
            text-decoration: none;
            outline: 0;
            opacity: $carousel-control-hover-opacity;
        }
    }
    .carousel-control-prev {
        left: 0;
        @if $enable-gradients {
            background: linear-gradient(90deg, rgba($black, .25), rgba($black, .001));
        }
    }
    .carousel-control-next {
        right: 0;
        @if $enable-gradients {
            background: linear-gradient(270deg, rgba($black, .25), rgba($black, .001));
        }
    } // Icons for within
    .carousel-control-prev-icon,
    .carousel-control-next-icon {
        display: inline-block;
        width: $carousel-control-icon-width;
        height: $carousel-control-icon-width;
        background: no-repeat 50% / 100% 100%;
    }
    .carousel-control-prev-icon {
        background-image: $carousel-control-prev-icon-bg;
    }
    .carousel-control-next-icon {
        background-image: $carousel-control-next-icon-bg;
    }
    .carousel-indicators {
        position: absolute;
        right: 0;
        bottom: 0;
        left: 0;
        z-index: 15;
        display: flex;
        justify-content: center;
        padding-left: 0; // override <ol> default
        // Use the .carousel-control's width as margin so we don't overlay those
        margin-right: $carousel-control-width;
        margin-left: $carousel-control-width;
        list-style: none;
        li {
            box-sizing: content-box;
            flex: 0 1 auto;
            width: $carousel-indicator-width;
            height: $carousel-indicator-height;
            margin-right: $carousel-indicator-spacer;
            margin-left: $carousel-indicator-spacer;
            text-indent: -999px;
            cursor: pointer;
            background-color: $carousel-indicator-active-bg;
            background-clip: padding-box;
            border-top: $carousel-indicator-hit-area-height solid transparent;
            border-bottom: $carousel-indicator-hit-area-height solid transparent;
            opacity: .5;
            @include transition($carousel-indicator-transition);
        }
        .active {
            opacity: 1;
        }
    }
    .carousel-caption {
        position: absolute;
        right: (100% - $carousel-caption-width) / 2;
        bottom: 20px;
        left: (100% - $carousel-caption-width) / 2;
        z-index: 10;
        padding-top: 20px;
        padding-bottom: 20px;
        color: $carousel-caption-color;
        text-align: center;
    }
    .sr-only,
    .sr-only-focusable:not(:focus) {
        @include sr-only();
    }
}
